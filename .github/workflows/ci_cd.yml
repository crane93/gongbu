name: Test for CI, S3 cp for CD

on: [push]

jobs:
  test:

    runs-on: ubuntu-20.04
    env:
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      LINE_CLIENT_SECRET: ${{ secrets.LINE_CLIENT_SECRET }}
      LINE_CLIENT_ID: ${{ secrets.LINE_CLIENT_ID }}
      LOCALSTACK_CACHE_PATH: localstack-image
    steps:
    - uses: actions/checkout@v2

    - name: Cache a LocalStack Docker image
      id: cache-docker-images
      uses: actions/cache@v2
      with:
        path: ${{ env.LOCALSTACK_CACHE_PATH }}
        key: ${{ runner.os }}-github-actions

    - name: Pull and save a LocalStack Docker image
      if: steps.cache-localstack.outputs.cache-hit != 'true'
      run: |
        docker-compose -f docker-compose-gitaction.yml build
        docker images --format '{{.Repository}}:{{.Tag}}'
        docker save $(docker images --format '{{.Repository}}:{{.Tag}}') -o ${LOCALSTACK_CACHE_PATH}

    - run: docker load -i ${LOCALSTACK_CACHE_PATH}
    - run: docker-compose -f docker-compose-gitaction.yml up --abort-on-container-exit

  s3_cp_for_aws_codepipeline:
    needs: test
    if: github.ref == 'refs/heads/production'

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - run: git archive -o build.zip HEAD
    - run: aws s3 cp ./build.zip s3://gongbu-app-pipeline-src/build.zip